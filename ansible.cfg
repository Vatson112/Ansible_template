[defaults]
#Максимальное число хостов на которых может запускаться скрипт одновременно.
forks = 20
#Указание файла инвентори
inventory = inventory
#Собирать факты только новых хостов. Если проиходит обращение к уже бывшим в текущем запуске, используется кэш.
#gathering= False
gathering = smart
#Не проверять и не записывать ssh ключ
host_key_checking = False
record_host_keys = no
#Создавать файл со списком неудавшихся хостов
retry_files_enabled = True
#Путь к файлам логов
log_path=log
#Включает поддержку пайпов в модулях
pipelining = True
#?
deprecation_warnings=True
vault_password_file = ~/cred/ansible

remote_user =root
ansible_user=root
ask_pass = True

[ssh_connection]
#Эта установка изменяет то, как выполняется передача модулей. Вместо открытия некоторого соединения SSH для создания какого- то каталога, другого для записи нашего собранного модуля и третьего для исполнения и очистки, Ansible вместо этого открывает некоторое SSH соединение с заданным удалённым хостом. Затем, поверх этого рабочего соединения, Ansible будет конвейерно передавать упакованный составной модуль кода и сценарий для исполнения. Это снижает число соединений с трёх до одного, что может быть в действительности пойти в сумму. По умолчанию конвейеризация отключена.
pipelining=True
ssh_args=-o StrictHostKeyChecking=no -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=300m -o PasswordAuthentication=yes -o ControlPath=/tmp/ssh-%r@%h:%p -o UserKnownHostsFile=/dev/null
#Создает сокет через который выполняет команды. Быстрее чем по ssh. Переписал в опцию выше
#control_path = /tmp/.ansible/.cp/ansible-ssh-%%h-%%p-%%r

[paramiko_connection]
host_key_checking = no
look_for_keys = no
record_host_keys = no
remote_user=root
pty = yes
ssh_args=-o ControlMaster=auto -o ControlPersist=300m -o ControlPath=/tmp/ssh-%r@%h:%p -o PasswordAuthentication=yes -o UserKnownHostsFile=/dev/null


[privilege_escalation]
become = True

[persistent_connection]
connect_timeout = 3600
command_timeout = 3600
#log_messages = True

